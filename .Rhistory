six_city <- read.csv("sixcity.csv") %>% select(-X) %>%
mutate(actual_age = age+8, smok=as.factor(smok)) %>%
arrange(id, age)
# relationship btw prevalence and age (Figure 1a)
six_city %>% group_by(actual_age) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats
six_city %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()+ theme(plot.title = element_text(hjust = 0.5,size=15),
legend.position="bottom",
legend.title = element_text(size=15),
axis.text = element_text(size=15),
legend.text = element_text(size=15,hjust = 0),
strip.text.x = element_text(size=15),
axis.title=element_text(size=15)) +
scale_colour_discrete(name = "Mother's smoking",
labels = c("Yes", "No"))
six_city %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()
summary_stats <- six_city %>% group_by(actual_age) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()+ theme(plot.title = element_text(hjust = 0.5,size=15),
legend.position="bottom",
legend.title = element_text(size=15),
axis.text = element_text(size=15),
legend.text = element_text(size=15,hjust = 0),
strip.text.x = element_text(size=15),
axis.title=element_text(size=15)) +
scale_colour_discrete(name = "Mother's smoking",
labels = c("Yes", "No"))
summary_stats
head(six_city)
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n(), smok = smok)
summary_stats
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()+ theme(plot.title = element_text(hjust = 0.5,size=15),
legend.position="bottom",
legend.title = element_text(size=15),
axis.text = element_text(size=15),
legend.text = element_text(size=15,hjust = 0),
strip.text.x = element_text(size=15),
axis.title=element_text(size=15)) +
scale_colour_discrete(name = "Mother's smoking",
labels = c("Yes", "No"))
cor_mat_overall <- cor(six_city_wide %>%
select(tidyselect::starts_with("resp")), use = "complete.obs")
head(six_city)
six_city_wide
six_city_wide <- six_city %>% spread(actual_age, resp)
six_city_wide
cor_mat_overall <- cor(six_city %>%
select(tidyselect::starts_with("resp")), use = "complete.obs")
corrplot(cor_mat_overall, method="color", col=col(200),
type="upper", order="original",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
number.cex = 1.5, diag=FALSE)
summary_stats
six_city_wide <- six_city %>% spread(key=actual_age, value = resp)
six_city_wide
?spread
six_city_wide <- six_city %>% spread(idvar = "id", timevar ="actual_age",
direction = "wide")
six_city_wide <- six_city %>% reshape(idvar = "id", timevar ="actual_age",
direction = "wide")
six_city_wide
cor_mat_overall <- cor(six_city_wide %>%
select(tidyselect::starts_with("resp")), use = "complete.obs")
corrplot(cor_mat_overall, method="color", col=col(200),
type="upper", order="original",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
number.cex = 1.5, diag=FALSE)
cor_mat_overall
col <- colorRampPalette(c("#BB4444", "#EE9988",
"#FFFFFF", "#77AADD", "#4477AA"))
corrplot(cor_mat_overall, method="color", col=col(200),
type="upper", order="original",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
number.cex = 1.5, diag=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(tab)
library(lattice)
library(nlme)
library(geepack)
library(lme4)
setwd("C:/Spring2023/BIOST540/HW3")
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#999999" )
aug_long <- aug_long %>%
mutate(Treatment = case_when(Treatment_Group == "Augmentation" ~ 1,
Treatment_Group == "Control" ~ 0))
aug <- read.csv("augmentation.csv")
aug <- aug[, c("id", "Treatment_Group", "HD_t0", "HD_t1", "HD_t2",
"HD_t3", "HD_t4", "HD_t5", "HD_t6")]
aug_long <- melt(aug, id=c("id","Treatment_Group"))
aug_long$week <- as.numeric(gsub("HD_t","",aug_long$variable))
aug_long <- aug_long %>%
mutate(Treatment = case_when(Treatment_Group == "Augmentation" ~ 1,
Treatment_Group == "Control" ~ 0))
lme_intercept <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
na.action = na.omit)
broom.mixed::tidy(lme_intercept, conf.int=TRUE)
lme_int_slope <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct(~ 1 + week | id, pdClass="pdSymm", REML=F),
na.action = na.omit)
broom.mixed::tidy(lme_int_slope, conf.int=TRUE)
summary(lme_int_slope)
5.333260^2
1.419095^2
-0.322 * 5.333260 * 1.419095
head(aug)
lme_int_slope_quadratic <- lme(value~week*Treatment + I(week^2)*Treatment,
data = aug_long, method = "ML",
random = reStruct( ~ 1 + week + I(week^2) | id,
pdClass="pdSymm", REML=F), na.action = na.omit)
broom.mixed::tidy(lme_int_slope_quadratic, conf.int=TRUE)
summary(lme_int_slope_quadratic)
5.2485893^2
3.8768396^2
0.5239312^2
-0.267 * 5.2485893 * 3.8768396
0.035 * 5.2485893 * 0.5239312
0.035 * 3.8768396 * 0.5239312
-0.928 * 3.8768396 * 0.5239312
summary(lme_int_slope)
4.12^2
six_city <- read.csv("sixcity.csv") %>% select(-X) %>%
mutate(actual_age = age+8, smok=as.factor(smok)) %>%
arrange(id, age)
# relationship btw prevalence and age (Figure 1a)
six_city %>% group_by(actual_age) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()+ theme(plot.title = element_text(hjust = 0.5,size=15),
legend.position="bottom",
legend.title = element_text(size=15),
axis.text = element_text(size=15),
legend.text = element_text(size=15,hjust = 0),
strip.text.x = element_text(size=15),
axis.title=element_text(size=15)) +
scale_colour_discrete(name = "Mother's smoking",
labels = c("Yes", "No"))
six_city_wide <- six_city %>% reshape(idvar = "id", timevar ="actual_age",
direction = "wide")
cor_mat_overall <- cor(six_city_wide %>%
select(tidyselect::starts_with("resp")),
use = "complete.obs")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF",
"#77AADD", "#4477AA"))
corrplot(cor_mat_overall, method="color", col=col(200),
type="upper", order="original",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
number.cex = 1.5, diag=FALSE)
fit1 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="independence",
std.err="san.se")
summary(fit1)
fit2 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="exchangeable",
std.err="san.se")
summary(fit2)
fit3 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="ar1",
std.err="san.se")
summary(fit3)
fit4 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="unstructured",
std.err="san.se")
summary(fit4)
fit1_or <- summary(fit1)$coefficients[3,]
fit2_or <- summary(fit2)$coefficients[3,]
fit3_or <- summary(fit3)$coefficients[3,]
fit4_or <- summary(fit4)$coefficients[3,]
fit1_or_inter <- summary(fit1)$coefficients[4,]
fit2_or_inter <- summary(fit2)$coefficients[4,]
fit3_or_inter <- summary(fit3)$coefficients[4,]
fit4_or_inter <- summary(fit4)$coefficients[4,]
fit1_log_or <- fit1_or$Estimate
fit2_log_or <- fit2_or$Estimate
fit3_log_or <- fit3_or$Estimate
fit4_log_or <- fit4_or$Estimate
fit1_log_or_inter <- fit1_or_inter$Estimate
fit2_log_or_inter <- fit2_or_inter$Estimate
fit3_log_or_inter <- fit3_or_inter$Estimate
fit4_log_or_inter <- fit4_or_inter$Estimate
fit1_or_95CI <- exp(fit1_log_or + qnorm(0.975) * fit1_or$Std.err * c(-1,1))
fit2_or_95CI <- exp(fit2_log_or + qnorm(0.975) * fit2_or$Std.err * c(-1,1))
fit3_or_95CI <- exp(fit3_log_or + qnorm(0.975) * fit3_or$Std.err * c(-1,1))
fit4_or_95CI <- exp(fit4_log_or + qnorm(0.975) * fit4_or$Std.err * c(-1,1))
fit1_or_inter_95CI <- exp(fit1_log_or_inter +
qnorm(0.975) * fit1_or_inter$Std.err * c(-1,1))
fit2_or_inter_95CI <- exp(fit2_log_or_inter +
qnorm(0.975) * fit2_or_inter$Std.err * c(-1,1))
fit3_or_inter_95CI <- exp(fit3_log_or_inter +
qnorm(0.975) * fit3_or_inter$Std.err * c(-1,1))
fit4_or_inter_95CI <- exp(fit4_log_or_inter +
qnorm(0.975) * fit4_or_inter$Std.err * c(-1,1))
modelfits <- rbind(c(exp(fit1_log_or), fit1_or_95CI),
c(exp(fit2_log_or), fit2_or_95CI),
c(exp(fit3_log_or), fit3_or_95CI),
c(exp(fit4_log_or), fit4_or_95CI),
c(exp(fit1_log_or_inter), fit1_or_inter_95CI),
c(exp(fit2_log_or_inter), fit2_or_inter_95CI),
c(exp(fit3_log_or_inter), fit3_or_inter_95CI),
c(exp(fit4_log_or_inter), fit4_or_inter_95CI)
)
colnames(modelfits) <- c("Estimate","Lower 95% CI","Upper 95% CI")
rownames(modelfits) <- c("Indep OR","Exch OR","AR1 OR","Unstr OR",
"Indep OR Int","Exch OR Int",
"AR1 OR Int","Unstr OR Int")
modelfits
summary(fit1)
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(tab)
library(lattice)
library(nlme)
library(geepack)
library(lme4)
setwd("C:/Spring2023/BIOST540/HW3")
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#999999" )
aug <- read.csv("augmentation.csv")
aug <- aug[, c("id", "Treatment_Group", "HD_t0", "HD_t1", "HD_t2",
"HD_t3", "HD_t4", "HD_t5", "HD_t6")]
aug_long <- melt(aug, id=c("id","Treatment_Group"))
aug_long$week <- as.numeric(gsub("HD_t","",aug_long$variable))
aug_long <- aug_long %>%
mutate(Treatment = case_when(Treatment_Group == "Augmentation" ~ 1,
Treatment_Group == "Control" ~ 0))
lme_intercept <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
na.action = na.omit)
broom.mixed::tidy(lme_intercept, conf.int=TRUE)
lme_int_slope <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct(~ 1 + week | id, pdClass="pdSymm", REML=F),
na.action = na.omit)
broom.mixed::tidy(lme_int_slope, conf.int=TRUE)
lme_int_slope_quadratic <- lme(value~week*Treatment + I(week^2)*Treatment,
data = aug_long, method = "ML",
random = reStruct( ~ 1 + week + I(week^2) | id,
pdClass="pdSymm", REML=F), na.action = na.omit)
broom.mixed::tidy(lme_int_slope_quadratic, conf.int=TRUE)
summary(lme_int_slope_quadratic)
six_city <- read.csv("sixcity.csv") %>% select(-X) %>%
mutate(actual_age = age+8, smok=as.factor(smok)) %>%
arrange(id, age)
# relationship btw prevalence and age (Figure 1a)
six_city %>% group_by(actual_age) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()+ theme(plot.title = element_text(hjust = 0.5,size=15),
legend.position="bottom",
legend.title = element_text(size=15),
axis.text = element_text(size=15),
legend.text = element_text(size=15,hjust = 0),
strip.text.x = element_text(size=15),
axis.title=element_text(size=15)) +
scale_colour_discrete(name = "Mother's smoking",
labels = c("Yes", "No"))
six_city_wide <- six_city %>% reshape(idvar = "id", timevar ="actual_age",
direction = "wide")
cor_mat_overall <- cor(six_city_wide %>%
select(tidyselect::starts_with("resp")),
use = "complete.obs")
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF",
"#77AADD", "#4477AA"))
fit3 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="ar1",
std.err="san.se")
summary(fit3)
exp(0.28877)
aug_long
lme_intercept <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
na.action = na.omit)
summary(lme_intercept)
six_city
fit1 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="independence",
std.err="san.se")
summary(fit1)
fit2 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="exchangeable",
std.err="san.se")
summary(fit2)
fit3 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="ar1",
std.err="san.se")
summary(fit3)
fit4 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="unstructured",
std.err="san.se")
summary(fit4)
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(tab)
library(lattice)
library(nlme)
library(geepack)
library(lme4)
setwd("C:/Spring2023/BIOST540/HW3")
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#999999" )
aug_long <- aug_long %>%
mutate(Treatment = case_when(Treatment_Group == "Augmentation" ~ 1,
Treatment_Group == "Control" ~ 0))
aug_long <- melt(aug, id=c("id","Treatment_Group"))
aug <- read.csv("augmentation.csv")
aug <- aug[, c("id", "Treatment_Group", "HD_t0", "HD_t1", "HD_t2",
"HD_t3", "HD_t4", "HD_t5", "HD_t6")]
aug_long <- melt(aug, id=c("id","Treatment_Group"))
aug_long$week <- as.numeric(gsub("HD_t","",aug_long$variable))
aug_long <- aug_long %>%
mutate(Treatment = case_when(Treatment_Group == "Augmentation" ~ 1,
Treatment_Group == "Control" ~ 0))
lme_intercept <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
na.action = na.omit)
lme_intercept
summary(lme_intercept)
lme_intercept <- lme(value~week*Treatment, data = na,omit(aug_long), method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
)
lme_intercept <- lme(value~week*Treatment, data = na.omit(aug_long), method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
)
lme_int_slope_quadratic <- lme(value~week*Treatment + I(week^2)*Treatment,
data = aug_long, method = "ML",
random = reStruct( ~ 1 + week + I(week^2) | id,
pdClass="pdSymm", REML=F), na.action = na.omit)
broom.mixed::tidy(lme_int_slope_quadratic, conf.int=TRUE)
summary(lme_int_slope_quadratic)
anova(lme_intercept, lme_int_slope, lme_int_slope_quadratic)
six_city <- read.csv("sixcity.csv") %>% select(-X) %>%
mutate(actual_age = age+8, smok=as.factor(smok)) %>%
arrange(id, age)
# relationship btw prevalence and age (Figure 1a)
six_city %>% group_by(actual_age) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats %>%
ggplot(aes(x=actual_age,y=prop_resp,colour=smok, group=smok))+
geom_point()+ geom_line()+
geom_pointrange(aes(ymin=prop_resp-1*sd_prop,ymax=prop_resp+1*sd_prop))+
xlab("Age (years)") + ylab("Prevalence of respiratory disease") +
theme_bw()+ theme(plot.title = element_text(hjust = 0.5,size=15),
legend.position="bottom",
legend.title = element_text(size=15),
axis.text = element_text(size=15),
legend.text = element_text(size=15,hjust = 0),
strip.text.x = element_text(size=15),
axis.title=element_text(size=15)) +
scale_colour_discrete(name = "Mother's smoking",
labels = c("Yes", "No"))
six_city_wide <- six_city %>% reshape(idvar = "id", timevar ="actual_age",
direction = "wide")
cor_mat_overall <- cor(six_city_wide %>%
select(tidyselect::starts_with("resp")),
use = "complete.obs")
fit1 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="independence",
std.err="san.se")
summary(fit1)
fit2 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="exchangeable",
std.err="san.se")
summary(fit2)
fit3 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="ar1",
std.err="san.se")
summary(fit3)
fit4 <- geeglm(resp ~ age*smok, id=id, data=six_city,
family=binomial(link="logit"), corstr="unstructured",
std.err="san.se")
summary(fit4)
glmm.fit <- glmer(resp ~ age*smok + (1|id), data=six_city,
family=binomial(link="logit"), nAGQ=20)
summary(glmm.fit)
broom.mixed::tidy(glmm.fit, conf.int=TRUE, exponentiate=TRUE)
# same as
exp(confint(glmm.fit,parm="beta_",method="Wald"))
summary(lme_intercept)
summary(lme_int_slope)
lme_int_slope <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct(~ 1 + week | id, pdClass="pdSymm", REML=F),
na.action = na.omit)
summary(lme_int_slope)
summary(fit1)
knitr::opts_chunk$set(echo = TRUE)
library(reshape2)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(tab)
library(lattice)
library(nlme)
library(geepack)
library(lme4)
setwd("C:/Spring2023/BIOST540/HW3")
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7","#999999" )
aug <- read.csv("augmentation.csv")
aug <- aug[, c("id", "Treatment_Group", "HD_t0", "HD_t1", "HD_t2",
"HD_t3", "HD_t4", "HD_t5", "HD_t6")]
aug_long <- melt(aug, id=c("id","Treatment_Group"))
aug_long$week <- as.numeric(gsub("HD_t","",aug_long$variable))
aug_long <- aug_long %>%
mutate(Treatment = case_when(Treatment_Group == "Augmentation" ~ 1,
Treatment_Group == "Control" ~ 0))
lme_intercept <- lme(value~week*Treatment, data = na.omit(aug_long), method = "ML",
random = reStruct( ~ 1 | id, pdClass="pdDiag", REML=FALSE),
)
lme_int_slope <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct(~ 1 + week | id, pdClass="pdSymm", REML=F),
na.action = na.exlude)
lme_int_slope <- lme(value~week*Treatment, data = aug_long, method = "ML",
random = reStruct(~ 1 + week | id, pdClass="pdSymm", REML=F),
na.action = na.exclude)
broom.mixed::tidy(lme_int_slope, conf.int=TRUE)
summary(lme_int_slope)
sqrt(0.21)
sqrt(2.01)
six_city <- read.csv("sixcity.csv") %>% select(-X) %>%
mutate(actual_age = age+8, smok=as.factor(smok)) %>%
arrange(id, age)
# relationship btw prevalence and age (Figure 1a)
six_city %>% group_by(actual_age) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
summary_stats <- six_city %>% group_by(actual_age, smok) %>%
summarise(n_resp = sum(resp==1), prop_resp = n_resp/n(),
sd_prop = sqrt(prop_resp*(1-prop_resp)/n()), count = n())
glmm.fit <- glmer(resp ~ age*smok + (1|id), data=six_city,
family=binomial(link="logit"), nAGQ=20)
summary(glmm.fit)
lme_int_slope_quadratic <- lme(value~week*Treatment + I(week^2)*Treatment,
data = aug_long, method = "ML",
random = reStruct( ~ 1 + week + I(week^2) | id,
pdClass="pdSymm", REML=F), na.action = na.omit)
broom.mixed::tidy(lme_int_slope_quadratic, conf.int=TRUE)
anova(lme_intercept, lme_int_slope, lme_int_slope_quadratic)
summary(lme_int_slope_quadratic)
install.packages("C:/Users/user/Downloads/ssfcov_1.0.zip", repos = NULL, type = "win.binary")
library(ssfcov)
install.packages("ssfcov")
library(ssfcov)
